theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
autofit()%>%
bg(i=c(1,2,nrow(t20_pt1)-1, nrow(t20_pt1)),bg="#0060ac") %>%
color(i=c(1,2,nrow(t20_pt2)-1,nrow(t20_pt2)),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
### make the state levesl files
ft9_states_pt1 <- list()
ft9_states_pt2 <- list()
for (state in states){
rows <- which( t20_pt1$state_abrev %in%  state)
state_t2 <-t20_pt1[c(1,2,rows),]
state_t2_pt2 <-t20_pt2[c(1,2,rows),]
ft9_state <- state_t2 %>%
flextable  %>%
delete_part(part="header") %>%
merge_v(j=c(1)) %>% # make all merges for state name
merge_at(i=c(1,2),j=2)%>%
merge_at(i=c(1,2),j=3) %>%
merge_at(i=c(1),j=c(4,5,6)) %>%
merge_at(i=c(1),j=c(7,8,9)) %>%
merge_at(i=c(1),j=c(10,11,12)) %>%
merge_at(i=c(1),j=c(13,14,15)) %>%
merge_at(i=c(1),j=c(16,17,18)) %>%
theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
bg(i=c(1,2),bg="#0060ac") %>%
color(i=c(1,2),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
ft9_state_pt2 <- state_t2_pt2 %>%
flextable  %>%
delete_part(part="header") %>%
merge_v(j=c(1)) %>% # make all merges for state name
merge_at(i=c(1,2),j=2)%>%
merge_at(i=c(1,2),j=3) %>%
merge_at(i=c(1),j=c(4,5,6)) %>%
merge_at(i=c(1),j=c(7,8,9)) %>%
merge_at(i=c(1),j=c(10,11,12)) %>%
merge_at(i=c(1),j=c(13,14,15)) %>%
theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
bg(i=c(1,2),bg="#0060ac") %>%
color(i=c(1,2),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
ft9_states_pt1[[state]] <- ft9_state
ft9_states_pt2[[state]] <- ft9_state_pt2
}
#######################################################################
# Table 21# NEW: Table request January 2021############################
# Current/ever purchases by r/e and state
# #9 in 2020 PMR
# TABLE9PURCHASEEVERRE
#######################################################################
assets_all<- read.csv("Z:/JimCasey/Analyses/Performance Measures/2020 PMR/all_participants_assets_including_inactive_sites_w_2019.csv")
assets_all$RaceName <- ifelse(assets_all$RaceName %in% c("Latino","Latino or Hispanic","Hispanic"),"Latino or Hispanic",as.character(assets_all$RaceName))
assets_active <- assets_all %>% filter(is_active==1) #filters for only active participants
names(assets_all)[1] <- "id" # rename first column to ID
names(assets_active)[1] <- "id" # rename first column to ID
# obtain current and ever amounts disaggregated by race
t21_current <- assets_all %>% filter(has_purchase==1 & TotalAmount !='NULL') %>%
filter(is_active==1) %>%
group_by(RaceName,state_abrev) %>%
summarize(N=length(unique(id)),
status = "active")
t21_ever <- assets_all %>% filter(has_purchase==1 & TotalAmount !='NULL') %>%
group_by(RaceName,state_abrev) %>%
summarize(N=length(unique(id)),
status = "all")
#### rbind
t21 <- rbind(t21_current, t21_ever) #Provides number of participants who bought something by race by state
### provide number of participants by race by state (regardless of whether or not they bought something)
state_current <- assets_active %>%
group_by(RaceName, state_abrev) %>%
summarize(N=length(unique(id)),
status = "active")
state_ever <-assets_all %>%
group_by(RaceName, state_abrev) %>%
summarize(N=length(unique(id)),
status = "all")
s_race_long <- state_current %>% bind_rows(state_ever)
s_race_long$RaceName <- ifelse(s_race_long$RaceName %in% c("Latino","Latino or Hispanic","Hispanic"),"Latino or Hispanic",as.character(s_race_long$RaceName))
s_race_raw <- s_race_long %>% group_by(RaceName,status,state_abrev)
t21 <- merge(t21,s_race_long,by=c("state_abrev","RaceName","status"),all.x=T) %>%
rename("N" = N.x , "Enrollment" = N.y)
#add total row
# Add state level total
t21_state_total_r<- t21 %>% group_by(RaceName,status) %>%
filter(!state_abrev %in% c("CO","CA","NC","FL", "NY")) %>%
summarize(N=sum(as.numeric(N)),
Enrollment = sum(as.numeric(Enrollment))) %>% mutate(state_abrev = "Total")
t21_total_overall <- assets_all %>%
summarize(tot_enrollment = length(unique(id)))
t21_total_overall_r <- assets_all %>% group_by(RaceName) %>%
summarize(tot_enrollment = length(unique(id)))
t21_state_total_r<-t21_state_total_r[(c(5,1,2,3,4))]
t21 <- rbind(t21,t21_state_total_r)
t21_state_total <- assets_active %>% group_by(state_abrev)%>%
summarize(N=length(unique(id)),
status = "active")
t21_state_total_all<- assets_all %>%  group_by(state_abrev)%>%
summarize(N=length(unique(id)),
status = "all")
t21_state_total <- t21_state_total %>% bind_rows(t21_state_total_all)
t21$Percent <- paste0(round(100*as.numeric(t21$N)/as.numeric(t21$Enrollment),0),"%")
# add total column ### all CURRENT involved in the state who have purchased something
current_state <- assets_active %>% filter(has_purchase == 1 & TotalAmount != 'NULL') %>%
group_by(state_abrev) %>%
summarize(participants = length(unique(id)),
status = "active")
current_state <- current_state %>%
add_row(state_abrev = "Total", participants = (sum(current_state$participants)), status = "active")
### all EVER involved in the state who have purchased something
ever_state <- assets_all %>% filter(has_purchase == 1 & TotalAmount != 'NULL' & state_abrev!= "NY") %>%
group_by(state_abrev) %>%
summarize(participants = length(unique(id)),
status = "all")
ever_state <- ever_state%>%
add_row(state_abrev = "Total", participants = (sum(ever_state$participants)), status = "all")
t21 <- merge(t21,data.frame(ever_state),by=c("state_abrev","status"),all.x=T)
t21 <- merge(t21,data.frame(current_state),by=c("state_abrev","status"),all.x=T)
t21$participants <- ifelse(is.na(t21$participants.x),t21$participants.y,t21$participants.x)
t21$status <- ifelse(t21$status== "active", "Current", "Ever")
## add state name
state_cross = data.frame("state_abrev" = c(state.abb,"Total"),"State" = c(state.name,"Total"))
t21 <- merge(t21,state_cross,by = "state_abrev")
t21$state_abrev <- t21$State
t21$State <- NULL
# Pivot  using latest tidyr
library(devtools)
###devtools::install_github("tidyverse/tidyr")
library(tidyr)
t21_pivot <-  t21 %>% pivot_wider(names_from = RaceName,
values_from = c(Enrollment,N,Percent),
values_fill=list("Enrollment"=0,"N"=0,"Percent"="0%")) %>%
select("state_abrev", "status", "participants",
"Enrollment_African American", "N_African American","Percent_African American",
"Enrollment_Asian", "N_Asian", "Percent_Asian",
"Enrollment_Caucasian", "N_Caucasian","Percent_Caucasian",
"Enrollment_Latino or Hispanic", "N_Latino or Hispanic", "Percent_Latino or Hispanic",
"Enrollment_Native American", "N_Native American","Percent_Native American",
"Enrollment_Pacific Islander", "N_Pacific Islander", "Percent_Pacific Islander",
"Enrollment_Native Hawaiian/Part Hawaiian","N_Native Hawaiian/Part Hawaiian",   "Percent_Native Hawaiian/Part Hawaiian",
"Enrollment_Multiracial", "N_Multiracial","Percent_Multiracial",
"Enrollment_Other",    "N_Other",  "Percent_Other"
)
# arrange by year
t21_total <- t21_pivot %>% arrange(state_abrev,status) %>% mutate_all(as.character)
t21_total$"State"  <- NULL
# add header rows:
df <- t21_total[0,]
# prepare for flex table
df[1,] <- as.list(c("State","Total Asset Purchasers",	"Total Asset Purchasers",
rep(c("Black, NH",
"Asian, NH	",
"White, NH",
"Latino/Hispanic",
"Native American, NH",
"Pacific Islander, NH",
"Native Hawaiian, NH"	,
"Multiracial, NH",
"Other, NH"),each=3)))
df[2,] <- as.list(c("State","Total Asset Purchasers","Total Asset Purchasers",
rep(c("Total","N","%"),9)))
t21_final <- df %>% bind_rows(t21_total)
# remove north carolina & new york
t21_final <- t21_final %>% filter(state_abrev !="North Carolina" & state_abrev!= "New York")
# split into two tables
t21_pt1  <- t21_final %>% select(c("state_abrev", "status", "participants", "Enrollment_African American",
"N_African American", "Percent_African American", "Enrollment_Asian",
"N_Asian", "Percent_Asian", "Enrollment_Caucasian", "N_Caucasian",
"Percent_Caucasian", "Enrollment_Latino or Hispanic", "N_Latino or Hispanic",
"Percent_Latino or Hispanic", "Enrollment_Native American", "N_Native American",
"Percent_Native American"))
t21_pt2<- t21_final %>% select(c("state_abrev", "status", "participants", "Enrollment_Pacific Islander", "N_Pacific Islander",
"Percent_Pacific Islander", "Enrollment_Native Hawaiian/Part Hawaiian",
"N_Native Hawaiian/Part Hawaiian", "Percent_Native Hawaiian/Part Hawaiian",
"Enrollment_Multiracial", "N_Multiracial", "Percent_Multiracial",
"Enrollment_Other", "N_Other", "Percent_Other"))
## make flex tables
# Make table
ft10_pt1 <- t21_pt1 %>%
flextable  %>%
delete_part(part="header") %>%
merge_v(j=c(1)) %>% # make all merges for state name
merge_at(i=c(1,2),j=c(2,3)) %>% # make horizontal merges for active part # make horizontal merges for active part
merge_at(i=c(1),j=c(4,5,6)) %>%
merge_at(i=c(1),j=c(7,8,9)) %>%
merge_at(i=c(1),j=c(10,11,12)) %>%
merge_at(i=c(1),j=c(13,14,15)) %>%
merge_at(i=c(1),j=c(16,17,18)) %>%
theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
autofit()%>%
bg(i=c(1,2,nrow(t21_pt1)-1,nrow(t21_pt1)),bg="#0060ac") %>%
color(i=c(1,2,nrow(t21_pt1)-1,nrow(t21_pt1)),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
ft10_pt2 <- t21_pt2 %>%
flextable  %>%
delete_part(part="header") %>%
merge_v(j=c(1)) %>% # make all merges for state name
merge_at(i=c(1,2),j=c(2,3)) %>% # make horizontal merges for active part # make horizontal merges for active part
merge_at(i=c(1),j=c(4,5,6)) %>%
merge_at(i=c(1),j=c(7,8,9)) %>%
merge_at(i=c(1),j=c(10,11,12)) %>%
merge_at(i=c(1),j=c(13,14,15)) %>%
theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
autofit()%>%
bg(i=c(1,2,nrow(t21_pt1)-1, nrow(t21_pt1)),bg="#0060ac") %>%
color(i=c(1,2,nrow(t21_pt2)-1,nrow(t21_pt2)),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
### make the state level files
ft10_states_pt1 <- list()
ft10_states_pt2 <- list()
for (state in states){
rows <- which( t21_pt1$state_abrev %in%  state)
state_t2 <-t21_pt1[c(1,2,rows),]
state_t2_pt2 <-t21_pt2[c(1,2,rows),]
ft10_state <- state_t2 %>%
flextable  %>%
delete_part(part="header") %>%
merge_v(j=c(1)) %>% # make all merges for state name
merge_at(i=c(1,2),j=c(2,3))%>%
merge_at(i=c(1),j=c(4,5,6)) %>%
merge_at(i=c(1),j=c(7,8,9)) %>%
merge_at(i=c(1),j=c(10,11,12)) %>%
merge_at(i=c(1),j=c(13,14,15)) %>%
merge_at(i=c(1),j=c(16,17,18)) %>%
theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
bg(i=c(1,2),bg="#0060ac") %>%
color(i=c(1,2),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
ft10_state_pt2 <- state_t2_pt2 %>%
flextable  %>%
delete_part(part="header") %>%
merge_v(j=c(1)) %>% # make all merges for state name
merge_at(i=c(1,2),j=2)%>%
merge_at(i=c(1,2),j=3) %>%
merge_at(i=c(1),j=c(4,5,6)) %>%
merge_at(i=c(1),j=c(7,8,9)) %>%
merge_at(i=c(1),j=c(10,11,12)) %>%
merge_at(i=c(1),j=c(13,14,15)) %>%
theme_box() %>%
align(j=1,align="left") %>%
align(i=c(1,2),align="center") %>%
bg(i=c(1,2),bg="#0060ac") %>%
color(i=c(1,2),color="white") %>%
border( i=c(1,2),border = fp_border(color = "white") ) %>%
border(i=2,border.bottom =  fp_border(color = "black") ) %>%
border(i=1,j=c(1,2,3),border.bottom =  fp_border(color = "black") )
ft10_states_pt1[[state]] <- ft10_state
ft10_states_pt2[[state]] <- ft10_state_pt2
}
#########################################################################
# write to temp file           #
ft7
ft1
ft2
ft3
ft4
ft5
ft6
ft7
ft8
ft9_pt1
ft9_pt2
ft10_pt1
ft10_pt2
library(officer)
library(ggplot2)
library(devEMF) # for making images
library(magrittr) # for data management
library(flextable) # for making tables
# note that this is a special document, where the graphs and tables have been removed and replaced with specific text that we will use to replace them
doc <- read_docx("//ct-files/g-drive/Child Welfare/6578 Jim Casey/DATABASES/ANALYSES/Performance Measures/2020 PMs/2020 PMR template with placeholders V3_AEF.docx")
## format ft1
flextable_dim(ft1)
# note that this is a special document, where the graphs and tables have been removed and replaced with specific text that we will use to replace them
doc <- read_docx("//ct-files/g-drive/Child Welfare/6578 Jim Casey/DATABASES/ANALYSES/Performance Measures/2020 PMs/2020 PMR template with placeholders V3_AEF.docx")
## format ft1
ft1 <- ft1 %>% width(width=.5)%>%
height(height = 0.2) %>%
width(j = 1,width=0.8) %>%
width(j = 2,width=.75) %>%
width(j = 3,width=.75) %>%
height(i=1,height=.4) %>%
fontsize(size=8)
flextable_dim(ft1)
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1)%>%
width(j = 5,width=.75) %>%
fontsize(size=11)
flextable_dim(ft2)
ft2
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.3) %>%
height(i=1,height=1)%>%
width(j = 5,width=.75) %>%
fontsize(size=8)
flextable_dim(ft2
)
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1)%>%
width(j = 5,width=.75) %>%
fontsize(size=8)
flextable_dim(ft2)
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.3) %>%
height(i=1,height=1)%>%
width(j = 5,width=.75) %>%
fontsize(size=8)
flextable_dim(ft2)
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1)%>%
width(j = 5,width=.75) %>%
fontsize(size=8)
flextable_dim(ft2)
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1)%>%
width(j = 1,width=1.5) %>%
width(j = 5,width=.75) %>%
fontsize(size=8)
flextable_dim(ft2)
ft2 <- ft2 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1)%>%
width(j = 1,width=1.5) %>%
width(j = 2,width=1.5) %>%
width(j = 5,width=.75) %>%
fontsize(size=8)
flextable_dim(ft2)
ft3 <- ft3 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1) %>%
height(i=2,height=1.5) %>%
fontsize(size=11)
flextable_dim(ft3)
ft3
ft3 <- ft3 %>%
width(width=1)%>%
height(height = 0.4) %>%
height(i=1,height=1) %>%
height(i=2,height=1.5) %>%
fontsize(size=11)
flextable_dim(ft3)
ft3 <- ft3 %>%
width(width=1)%>%
width(j = 1,width=1.5) %>%
width(j = 2,width=1.5) %>%
height(height = 0.4) %>%
height(i=1,height=1) %>%
height(i=2,height=1.5) %>%
fontsize(size=10)
flextable_dim(ft3)
ft3 <- ft3 %>%
width(width=1)%>%
width(j = 1,width=1.5) %>%
width(j = 2,width=1.5) %>%
height(height = 0.4) %>%
height(i=1,height=1) %>%
height(i=2,height=1) %>%
fontsize(size=10)
flextable_dim(ft3)
ft4 <- ft4 %>%
width(width=1)%>%
width(j = 1, width = 1.25) %>%
height(height = 0.475) %>%
height(i=1,height=1) %>%
height(i=2,height=1) %>%
fontsize(size=11)
flextable_dim(ft4)
ft4
ft4 <- ft4 %>%
width(width=1)%>%
width(j = 1, width = 1.25) %>%
width(j = 5,width=.75) %>%
height(height = 0.475) %>%
height(i=1,height=1) %>%
height(i=2,height=1) %>%
fontsize(size=11)
flextable_dim(ft4)
ft4 <- ft4 %>%
width(width=1)%>%
width(j = 1, width = 1.25) %>%
width(j = 5,width=.75) %>%
height(height = 0.4) %>%
height(i=1,height=1) %>%
height(i=2,height=1) %>%
fontsize(size=10)
flextable_dim(ft4)
ft4 <- ft4 %>%
width(width=1)%>%
width(j = 1, width = 1.5) %>%
width(j = 5,width=1.5) %>%
height(height = 0.4) %>%
height(i=1,height=1) %>%
height(i=2,height=1) %>%
fontsize(size=10)
flextable_dim(ft4)
ft5 <- ft5 %>% width(width=0.8) %>%
height(height = 0.4)%>%
width(j = 1,width=1.25) %>%
width(j = 2,width=0.75) %>%
height(i=2,height=0.75) %>%
fontsize(size=9)
flextable_dim(ft5)
ft5
ft5 <- ft5 %>% width(width=0.8) %>%
height(height = 0.4)%>%
width(j = 1,width=1.25) %>%
width(j = 2,width=0.75) %>%
height(i=2,height=0.75) %>%
fontsize(size=9)
flextable_dim(ft5)
ft6 <- ft6 %>% width(width=.7)%>%
height(height = 0.25)%>%
width(j = 1,width=1.25) %>%
width(j =7,width=1.25) %>%
width(j = 8,width=1.25) %>%
height(i=2,height=1) %>%
fontsize(size=9)
flextable_dim(ft6)
ft6
ft6 <- ft6 %>% width(width=1)%>%
height(height = 0.2)%>%
width(j = 1,width=1.25) %>%
width(j =7,width=1.25) %>%
width(j = 8,width=1.25) %>%
height(i=2,height=0.4) %>%
fontsize(size=9)
flextable_dim(ft6)
install.packages("mosaic")
install.packages("stargazer")
install.packages("survey")
getwd()
setwd(C:/Users/svillatoro/Desktop/Better Data Science/Week 9/Week 9 - Survey analysis and advanced shiny/ACEs prediction app full
)
setwd("C:/Users/svillatoro/Desktop/Better Data Science/Week 9/Week 9 - Survey analysis and advanced shiny/ACEs prediction app full"
)
getwd()
install.packages("mfx")
library(survey)
library(shiny)
# Loading in my dataframe
load("finaldata2.rda")
# svydesign from survey package adds weights to my observations
comp42.design <- svydesign(id= ~idnumr, data = data, weights = data$nschwt)
server <- function(input, output) {
#creating a reactive regression forumula that uses inputs from the check list
#as independent variables to predict the variable ACE_BI
regFormula <- reactive({
as.formula(paste("ACE_BI", " ~ ", paste(input$iv1, collapse = "+")))
})
# then, put that formula into the svyglm() from survey package which outputs
# a weighted regression
model <- reactive({
svyglm(regFormula(), family= quasibinomial, comp42.design)
})
#Create nice regression table output
#stargazer() comes from the stargazer package
output$regTab <- renderText({
stargazer(model(), type = "html", dep.var.labels = "Risk Prediction")
})
}
?svyglm()
?stargazer()
runApp('C:/Users/svillatoro/Desktop/Better Data Science/Week 9/Week 9 - Survey analysis and advanced shiny/ACEs prediction app reduced')
library(shinythemes)
library(shiny)
library(rsconnect)
library(mfx)
library(ggplot2)
library(survey)
library(foreign)
library(ggplot2)
library(stargazer)
library(rgdal)
library(plyr)
library(leaflet)
library(dplyr)
runApp('C:/Users/svillatoro/Desktop/Better Data Science/Week 9/Week 9 - Survey analysis and advanced shiny/ACEs prediction app reduced')
